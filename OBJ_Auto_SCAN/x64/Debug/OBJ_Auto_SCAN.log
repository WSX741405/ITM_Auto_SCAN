C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V140\Microsoft.CppBuild.targets(392,5): warning MSB8028: The intermediate directory (x64\Debug\) contains files shared from another project (ITM_Auto_SCAN.vcxproj).  This can lead to incorrect clean and rebuild behavior.
  Moc'ing MainWindow.h...
  moc_IObserver.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(47): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): note: 請參閱 'ISubject' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(34): error C2027: 使用未定義類型 'qt_meta_stringdata_UIObserver_t'
  GeneratedFiles\Debug\moc_IObserver.cpp(23): note: 請參閱 'qt_meta_stringdata_UIObserver_t' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(35): error C2027: 使用未定義類型 'qt_meta_stringdata_UIObserver_t'
  GeneratedFiles\Debug\moc_IObserver.cpp(23): note: 請參閱 'qt_meta_stringdata_UIObserver_t' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(36): error C2027: 使用未定義類型 'qt_meta_stringdata_UIObserver_t'
  GeneratedFiles\Debug\moc_IObserver.cpp(23): note: 請參閱 'qt_meta_stringdata_UIObserver_t' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(37): error C2027: 使用未定義類型 'qt_meta_stringdata_UIObserver_t'
  GeneratedFiles\Debug\moc_IObserver.cpp(23): note: 請參閱 'qt_meta_stringdata_UIObserver_t' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(38): error C2027: 使用未定義類型 'qt_meta_stringdata_UIObserver_t'
  GeneratedFiles\Debug\moc_IObserver.cpp(23): note: 請參閱 'qt_meta_stringdata_UIObserver_t' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(39): error C2027: 使用未定義類型 'qt_meta_stringdata_UIObserver_t'
  GeneratedFiles\Debug\moc_IObserver.cpp(23): note: 請參閱 'qt_meta_stringdata_UIObserver_t' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(75): error C2440: 'static_cast': 無法由 'QObject *' 轉換為 'UIObserver *'
  GeneratedFiles\Debug\moc_IObserver.cpp(75): note: 指向的類型沒有相關; 轉換必須有 reinterpret_cast、C-Style 轉換或函式樣式轉換
GeneratedFiles\Debug\moc_IObserver.cpp(78): error C2027: 使用未定義類型 'UIObserver'
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(19): note: 請參閱 'UIObserver' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(79): error C2027: 使用未定義類型 'UIObserver'
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(19): note: 請參閱 'UIObserver' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(105): error C2061: 語法錯誤: 識別項 '_t'
GeneratedFiles\Debug\moc_IObserver.cpp(105): error C2143: 語法錯誤: 遺漏 ';' (在 '{' 之前)
GeneratedFiles\Debug\moc_IObserver.cpp(112): error C2061: 語法錯誤: 識別項 '_t'
GeneratedFiles\Debug\moc_IObserver.cpp(112): error C2143: 語法錯誤: 遺漏 ';' (在 '{' 之前)
GeneratedFiles\Debug\moc_IObserver.cpp(121): error C2027: 使用未定義類型 'qt_meta_stringdata_UIObserver_t'
  GeneratedFiles\Debug\moc_IObserver.cpp(23): note: 請參閱 'qt_meta_stringdata_UIObserver_t' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(127): error C2270: 'metaObject': 不允許在非成員函式上使用修飾詞
GeneratedFiles\Debug\moc_IObserver.cpp(134): error C2027: 使用未定義類型 'qt_meta_stringdata_UIObserver_t'
  GeneratedFiles\Debug\moc_IObserver.cpp(23): note: 請參閱 'qt_meta_stringdata_UIObserver_t' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(134): error C2660: 'strcmp': 函式不使用 1 引數
GeneratedFiles\Debug\moc_IObserver.cpp(135): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
GeneratedFiles\Debug\moc_IObserver.cpp(137): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
GeneratedFiles\Debug\moc_IObserver.cpp(138): error C2352: 'QObject::qt_metacast': 非靜態成員函式的呼叫不合法
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qobject.h(118): note: 請參閱 'QObject::qt_metacast' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(143): error C2352: 'QObject::qt_metacall': 非靜態成員函式的呼叫不合法
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qobject.h(118): note: 請參閱 'QObject::qt_metacall' 的宣告
GeneratedFiles\Debug\moc_IObserver.cpp(148): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
GeneratedFiles\Debug\moc_IObserver.cpp(152): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
GeneratedFiles\Debug\moc_IObserver.cpp(162): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
GeneratedFiles\Debug\moc_IObserver.cpp(169): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
  moc_MainWindow.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
d:\github\obj_auto_scan\obj_auto_scan\generatedfiles\debug\../../include/ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(42): error C2989: 'UIObserver': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(19): note: 請參閱 'UIObserver' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(228): error C2989: 'MainWindow': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(6): note: 請參閱 'MainWindow' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(34): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(35): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(36): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(37): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(38): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(39): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(40): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(41): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(42): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(43): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(44): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(45): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(46): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(47): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(48): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(49): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(50): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(51): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(52): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(53): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(54): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(55): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(56): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(57): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(58): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(59): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(60): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(61): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(62): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(63): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(64): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(65): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(66): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(67): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(68): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(69): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(70): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(71): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(72): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(73): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(74): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(75): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(76): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(77): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(78): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(79): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(80): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(81): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(82): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(83): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(84): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(85): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(86): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(87): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(88): error C2027: 使用未定義類型 'qt_meta_stringdata_MainWindow_t'
  GeneratedFiles\Debug\moc_MainWindow.cpp(23): note: 請參閱 'qt_meta_stringdata_MainWindow_t' 的宣告
GeneratedFiles\Debug\moc_MainWindow.cpp(88): fatal error C1003: 錯誤計數超過 100; 停止編譯
  Flexx.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(47): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): note: 請參閱 'ISubject' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\grabber\flexx/Flexx.h(14): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(40): note: 請參閱 'ISubject' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\grabber\flexx/Flexx.h(63): error C2989: 'Flexx': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(10): note: 請參閱 'Flexx' 的宣告
include\grabber\flexx\Flexx.cpp(7): error C2988: 無法辨認的樣板宣告/定義
include\grabber\flexx\Flexx.cpp(7): error C2059: 語法錯誤: 'const'
include\grabber\flexx\Flexx.cpp(7): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
include\grabber\flexx\Flexx.cpp(8): error C2448: '_subject': 函式樣式初始設定式似乎是函式定義
include\grabber\flexx\Flexx.cpp(16): error C2065: '_pointCloud': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(17): error C2065: '_pointCloud': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(19): error C2065: '_width': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(20): error C2065: '_height': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(22): error C2065: '_width': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(22): error C2065: '_height': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(24): error C2065: '_depthConfidence': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(33): error C2065: '_pointCloud': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(35): error C2065: '_pointCloud': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(40): error C2065: '_depthConfidence': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(45): error C2065: '_lockForReceivedData': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(52): error C2988: 無法辨認的樣板宣告/定義
include\grabber\flexx\Flexx.cpp(52): error C2143: 語法錯誤: 遺漏 ')' (在 '*' 之前)
include\grabber\flexx\Flexx.cpp(52): error C2143: 語法錯誤: 遺漏 ';' (在 '*' 之前)
include\grabber\flexx\Flexx.cpp(52): error C2062: 未預期的類型 'unsigned int'
include\grabber\flexx\Flexx.cpp(52): error C2059: 語法錯誤: ')'
include\grabber\flexx\Flexx.cpp(52): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
include\grabber\flexx\Flexx.cpp(52): error C2374: '_subject': 重複定義; 多個初始設定
  include\grabber\flexx\Flexx.cpp(7): note: 請參閱 '_subject' 的宣告
include\grabber\flexx\Flexx.cpp(53): error C2448: '_subject': 函式樣式初始設定式似乎是函式定義
include\grabber\flexx\Flexx.cpp(69): error C2988: 無法辨認的樣板宣告/定義
include\grabber\flexx\Flexx.cpp(69): error C2059: 語法錯誤: ')'
include\grabber\flexx\Flexx.cpp(70): error C2143: 語法錯誤: 遺漏 ';' (在 '{' 之前)
include\grabber\flexx\Flexx.cpp(70): error C2447: '{': 遺漏函式標頭 (舊樣式型式清單?)
include\grabber\flexx\Flexx.cpp(77): error C2065: '_cameraDevice': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(77): error C2065: '_useCases': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(77): error C2065: '_selectedUseCaseId': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(79): error C2065: '_listener': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(80): error C2065: '_cameraDevice': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(80): error C2065: '_listener': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(82): error C2065: '_cameraDevice': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(88): error C2065: '_cameraDevice': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(93): error C2084: 函式 'void SetDepthConfidence(int)' 的主體已經被宣告了
  include\grabber\flexx\Flexx.cpp(38): note: 請參閱 'SetDepthConfidence' 之前的定義
include\grabber\flexx\Flexx.cpp(94): error C2065: '_listener': 未宣告的識別項
include\grabber\flexx\Flexx.cpp(98): error C2084: 函式 'std::mutex &GetMutex(void)' 的主體已經被宣告了
  include\grabber\flexx\Flexx.cpp(43): note: 請參閱 'GetMutex' 之前的定義
include\grabber\flexx\Flexx.cpp(99): error C2065: '_listener': 未宣告的識別項
  GrabberFactory.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(6): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/Grabber.h(7): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(47): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): note: 請參閱 'ISubject' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\grabber\flexx/Flexx.h(14): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(40): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/rs/rsgrabber/time.h(155): error C2955: 'pcl::MyStopWatch': 使用 類別 樣板 必須有 樣板 引數清單
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/rs/rsgrabber/time.h(111): note: 請參閱 'pcl::MyStopWatch' 的宣告
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/rs/rsgrabber/real_sense_grabber.h(56): note: 請參閱要編譯的類別 樣板 具現化 'pcl::io::Buffer<T>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/rs/rsgrabber/time.h(157): error C2059: 語法錯誤: 'const'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/rs/rsgrabber/time.h(157): error C2334: 在 ':' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/rs/rsgrabber/real_sense_grabber.h(54): fatal error C1075: 檔案結尾的左 大括號 '{' 不相符
  OpenNI2Grabber.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(47): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): note: 請參閱 'ISubject' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\grabber\openni/OpenNI2Grabber.h(27): error C2989: 'OpenNI2Grabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(12): note: 請參閱 'OpenNI2Grabber' 的宣告
include\grabber\openni\OpenNI2Grabber.cpp(3): error C2988: 無法辨認的樣板宣告/定義
include\grabber\openni\OpenNI2Grabber.cpp(3): error C2143: 語法錯誤: 遺漏 ')' (在 '*' 之前)
include\grabber\openni\OpenNI2Grabber.cpp(3): error C2143: 語法錯誤: 遺漏 ';' (在 '*' 之前)
include\grabber\openni\OpenNI2Grabber.cpp(3): error C2059: 語法錯誤: ')'
include\grabber\openni\OpenNI2Grabber.cpp(3): error C2059: 語法錯誤: ':'
include\grabber\openni\OpenNI2Grabber.cpp(3): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
include\grabber\openni\OpenNI2Grabber.cpp(4): error C2448: '_subject': 函式樣式初始設定式似乎是函式定義
include\grabber\openni\OpenNI2Grabber.cpp(12): error C2065: '_grabber': 未宣告的識別項
include\grabber\openni\OpenNI2Grabber.cpp(17): error C2065: '_grabber': 未宣告的識別項
include\grabber\openni\OpenNI2Grabber.cpp(27): error C2065: '_mutex': 未宣告的識別項
include\grabber\openni\OpenNI2Grabber.cpp(48): error C2665: 'boost::this_thread::sleep': 沒有任何 2 多載可以轉換所有引數類型
  D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/thread/detail/thread.hpp(620): note: 可能是 'void boost::this_thread::sleep(const boost::xtime &)'
  D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\Boost\include\boost-1_61\boost/thread/win32/thread_data.hpp(279): note: 或       'void boost::this_thread::sleep(const boost::system_time &)'
  include\grabber\openni\OpenNI2Grabber.cpp(48): note: 當嘗試符合引數清單 '(boost::date_time::subsecond_duration<boost::posix_time::time_duration,1000>)' 時
  RS.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\flexx/Flexx.h(14): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(47): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): note: 請參閱 'ISubject' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(40): note: 請參閱 'ISubject' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(31): error C2989: 'Realsense': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(11): note: 請參閱 'Realsense' 的宣告
include\grabber\rs\RS.cpp(3): error C2988: 無法辨認的樣板宣告/定義
include\grabber\rs\RS.cpp(3): error C2143: 語法錯誤: 遺漏 ')' (在 '*' 之前)
include\grabber\rs\RS.cpp(3): error C2143: 語法錯誤: 遺漏 ';' (在 '*' 之前)
include\grabber\rs\RS.cpp(3): error C2146: 語法錯誤: 遺漏 ';' (在識別項 'deviceId' 之前)
include\grabber\rs\RS.cpp(3): error C2059: 語法錯誤: ')'
include\grabber\rs\RS.cpp(3): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
include\grabber\rs\RS.cpp(4): error C2448: '_subject': 函式樣式初始設定式似乎是函式定義
include\grabber\rs\RS.cpp(10): error C2988: 無法辨認的樣板宣告/定義
include\grabber\rs\RS.cpp(10): error C2059: 語法錯誤: ')'
include\grabber\rs\RS.cpp(11): error C2143: 語法錯誤: 遺漏 ';' (在 '{' 之前)
include\grabber\rs\RS.cpp(11): error C2447: '{': 遺漏函式標頭 (舊樣式型式清單?)
include\grabber\rs\RS.cpp(17): error C2065: '_grabber': 未宣告的識別項
include\grabber\rs\RS.cpp(22): error C2065: '_grabber': 未宣告的識別項
include\grabber\rs\RS.cpp(39): error C2065: '_mutex': 未宣告的識別項
  kinfuLSApp.cpp
c1xx : fatal error C1083: 無法開啟來源檔案: 'include\kinfuApp\kinfuLSApp.cpp': No such file or directory
  main.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
d:\github\obj_auto_scan\obj_auto_scan\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
d:\github\obj_auto_scan\obj_auto_scan\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
d:\github\obj_auto_scan\obj_auto_scan\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
d:\github\obj_auto_scan\obj_auto_scan\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
d:\github\obj_auto_scan\obj_auto_scan\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
d:\github\obj_auto_scan\obj_auto_scan\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
d:\github\obj_auto_scan\obj_auto_scan\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
d:\github\obj_auto_scan\obj_auto_scan\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
d:\github\obj_auto_scan\obj_auto_scan\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
d:\github\obj_auto_scan\obj_auto_scan\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  d:\github\obj_auto_scan\obj_auto_scan\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\github\obj_auto_scan\obj_auto_scan\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
d:\github\obj_auto_scan\obj_auto_scan\include\ui/MainWindow.h(42): error C2989: 'UIObserver': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\observer/IObserver.h(19): note: 請參閱 'UIObserver' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): note: 請參閱 'ISubject' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
d:\github\obj_auto_scan\obj_auto_scan\include\ui/MainWindow.h(228): error C2989: 'MainWindow': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\observer/IObserver.h(6): note: 請參閱 'MainWindow' 的宣告
include\main.cpp(11): error C2065: 'w': 未宣告的識別項
  IObserver.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(47): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): note: 請參閱 'ISubject' 的宣告
include\observer\IObserver.cpp(10): error C3861: 'UpdateViewer': 找不到識別項
include\observer\IObserver.cpp(11): error C3861: 'KeepFrameArrived': 找不到識別項
include\observer\IObserver.cpp(21): error C2065: '_observers': 未宣告的識別項
include\observer\IObserver.cpp(26): error C2065: '_observers': 未宣告的識別項
include\observer\IObserver.cpp(28): error C2065: 'observer': 未宣告的識別項
  ObserverFactory.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(47): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(6): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(40): note: 請參閱 'ISubject' 的宣告
  MainWindow.cpp
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/point_traits.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\3rdParty\FLANN\include\flann/algorithms/dist.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(25): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/interactor_style.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/visualization/pcl_visualizer.h(1618): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(4): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(5): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/objFile.h(9): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/plyFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/FileFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\file/pcdFile.h(6): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/ransac.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\Code\PCL-1.8.0-vs2015\PCL 1.8.0\include\pcl-1.8\pcl/sample_consensus/sac_model_registration.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pointCloudProcessing/correspondences/CorrespondencesFactory.h(7): warning C4067: 未預期的語彙基元，接著前置處理器指示詞 - 必須是新行
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
c:\program files\nvidia gpu computing toolkit\cuda\v8.0\include\cuda_runtime_api.h(1946): warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0\include\cuda_runtime.h : warning C4819: 檔案含有無法在目前字碼頁 (950) 中表示的字元。請以 Unicode 格式儲存檔案以防止資料遺失
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C3646: 'tsdfVolumeGPU': 未知的覆寫規範
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(166): note: 請參閱要編譯的類別 樣板 具現化 'pcl::gpu::kinfuLS::StandaloneMarchingCubes<PointT>' 之參考
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2059: 語法錯誤: '('
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(111): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C3646: 'tsdf_volume_gpu_': 未知的覆寫規範
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/standalone_marching_cubes.h(150): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu_large_scale/tools/evaluation.h(49): error C2011: 'Evaluation': 'class' 類型重複定義
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\pcl/gpu/kinfu/tools/evaluation.h(49): note: 請參閱 'Evaluation' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2143: 語法錯誤: 遺漏 ';' (在 '<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(164): error C2059: 語法錯誤: '<'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(178): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(204): error C2061: 語法錯誤: 識別項 'directory'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2143: 語法錯誤: 遺漏 ';' (在 '<<' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2886: 'std::cout': 不能在成員 using 宣告中使用符號
  D:\Software\Visual Studio Professional 2015\VC\include\iostream(27): note: 請參閱 'std::cout' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(206): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(207): error C2059: 語法錯誤: 'if'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(208): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(211): error C2061: 語法錯誤: 識別項 'dir'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: 'for'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ')' (在 ';' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2143: 語法錯誤: 遺漏 ';' (在 '!=' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C4430: 遺漏類型規範 - 假設為 int。注意: C++ 不支援 default-int
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: '++'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(214): error C2059: 語法錯誤: ')'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(217): error C2334: 在 '{' 之前有未預期的語彙基元; 略過函式主體
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2059: 語法錯誤: 'return'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(226): error C2238: 在 ';' 之前有未預期的語彙基元
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2988: 無法辨認的樣板宣告/定義
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2143: 語法錯誤: 遺漏 ';' (在 '}' 之前)
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(228): error C2059: 語法錯誤: '}'
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Affine3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(553): note: 可能是 'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::UniformScaling<float> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(549): note: 或       'Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Translation<float,3> &) const'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/Transform.h(472): note: 或       'const Eigen::Transform<float,3,2,0> Eigen::Transform<float,3,2,0>::operator *(const Eigen::Transform<float,3,2,0> &) const'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(135): note: 當嘗試符合引數清單 '(const Eigen::Affine3f, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(136): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): error C2678: 二元運算子 '*': 找不到使用左方運算元類型 'const Eigen::Matrix<float,3,3,0,3,3>' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(403): note: 可能是 'Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const Eigen::UniformScaling<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(69): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(49): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &) const'
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(241): note: 或       'const QVector2D operator *(const QVector2D &,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(236): note: 或       'const QVector2D operator *(const QVector2D &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qvector2d.h(231): note: 或       'const QVector2D operator *(float,const QVector2D &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(400): note: 或       'QTransform operator *(const QTransform &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(397): note: 或       'QPainterPath operator *(const QPainterPath &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(395): note: 或       'QRegion operator *(const QRegion &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(393): note: 或       'QPolygonF operator *(const QPolygonF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(391): note: 或       'QPolygon operator *(const QPolygon &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(389): note: 或       'QLine operator *(const QLine &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(387): note: 或       'QLineF operator *(const QLineF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(385): note: 或       'QPointF operator *(const QPointF &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qtransform.h(383): note: 或       'QPoint operator *(const QPoint &,const QTransform &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(160): note: 或       'QPainterPath operator *(const QPainterPath &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(158): note: 或       'QRegion operator *(const QRegion &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(156): note: 或       'QPolygonF operator *(const QPolygonF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(154): note: 或       'QPolygon operator *(const QPolygon &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(152): note: 或       'QLine operator *(const QLine &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(150): note: 或       'QLineF operator *(const QLineF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(148): note: 或       'QPointF operator *(const QPointF &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtGui/qmatrix.h(146): note: 或       'QPoint operator *(const QPoint &,const QMatrix &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(368): note: 或       'const QPointF operator *(const QPointF &,qreal)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(373): note: 或       'const QPointF operator *(qreal,const QPointF &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(190): note: 或       'const QPoint operator *(int,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(181): note: 或       'const QPoint operator *(const QPoint &,int)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(187): note: 或       'const QPoint operator *(double,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(178): note: 或       'const QPoint operator *(const QPoint &,double)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(184): note: 或       'const QPoint operator *(float,const QPoint &)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qpoint.h(175): note: 或       'const QPoint operator *(const QPoint &,float)'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(354): note: 或       'const QSizeF operator *(qreal,const QSizeF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(351): note: 或       'const QSizeF operator *(const QSizeF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(184): note: 或       'const QSize operator *(qreal,const QSize &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qsize.h(181): note: 或       'const QSize operator *(const QSize &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(421): note: 或       'QMarginsF operator *(qreal,const QMarginsF &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(415): note: 或       'QMarginsF operator *(const QMarginsF &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(201): note: 或       'QMargins operator *(qreal,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(195): note: 或       'QMargins operator *(const QMargins &,qreal) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(189): note: 或       'QMargins operator *(int,const QMargins &) noexcept'
  D:\Code\QT5.9.1\5.9.1\msvc2015_64\include\QtCore/qmargins.h(183): note: 或       'QMargins operator *(const QMargins &,int) noexcept'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<float,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<double,3,2,0> Eigen::RotationBase<Derived,3>::operator *(const Eigen::DiagonalMatrix<double,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Quaternion<double,0>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::MatrixXf,1,Eigen::OuterStride<-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix<float,4,1,0,4,1>,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<float,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Array4f,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector3c,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<uint8_t,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::MatrixBase<Derived>::operator *(const unsigned char &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const pcl::Vector4c,1,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Map<const Eigen::Matrix3f,0,Eigen::Stride<0,0>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>>::operator *(const float &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<float,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/DiagonalMatrix.h(80): note: 或       'const Eigen::DiagonalWrapper<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived>> Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>>::operator *(const double &,const Eigen::DiagonalBase<Eigen::DiagonalMatrix<double,3,3>> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,4,1,3,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,3,3,1,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<float,2,1,0,2,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,2,1,0,2,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,-1,0,-1,-1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,-1,-1,0,-1,-1>,3,13,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<int>,const Eigen::Matrix<int,-1,-1,0,-1,-1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<int>,Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::ArrayBase<Derived>::operator *(const float &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<float> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_quotient_op<float,float>,const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Array<float,4,1,0,4,1>>,const Eigen::ArrayWrapper<Eigen::Matrix<float,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<int,4,1,0,4,1>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<int,4,1,0,4,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<int,-1,-1,0,-1,-1>,-1,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::ArrayBase<Derived>::operator *(const int &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<int> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::Array<int,4,1,0,4,1>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<bool>,const Derived> Eigen::ArrayBase<Derived>::operator *(const bool &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<bool,std::complex<bool>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<bool> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_cmp_op<int,Eigen::internal::cmp_LE>,const Eigen::ArrayWrapper<Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Array<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<int>,const Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<int>,const Eigen::Matrix<int,4,1,0,4,1>,const Eigen::Matrix<int,4,1,0,4,1>>,const Eigen::Matrix<int,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<double,3,3,0,3,3>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>,const Derived> Eigen::MatrixBase<Derived>::operator *(const double &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<double,std::complex<double>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<double> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<double,3,3,0,3,3>,3,1,true>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,4,1,0,4,1>,const Eigen::Matrix<float,4,1,0,4,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_opposite_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Block<const Eigen::Matrix<float,4,4,0,4,4>,3,1,false>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Matrix<float,3,1,0,3,1>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float>,const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Eigen::Matrix<float,3,1,0,3,1>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseBinaryOp<Eigen::internal::scalar_difference_op<float>,const Eigen::Map<const Eigen::Vector3f,0,Eigen::Stride<0,0>>,const Eigen::Matrix<float,3,1,0,3,1>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<float>,const Derived> Eigen::MatrixBase<Derived>::operator *(const float &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<float,std::complex<float>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<float> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>,Eigen::Matrix<float,3,3,0,3,3>>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<int>,const Derived> Eigen::MatrixBase<Derived>::operator *(const int &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<int,std::complex<int>>,const Derived> Eigen::MatrixBase<Derived>::operator *(const std::complex<int> &,const Eigen::MatrixBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Matrix<int,-1,1,0,-1,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(76): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<unsigned char>,const Derived> Eigen::ArrayBase<Derived>::operator *(const unsigned char &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src\core\../plugins/CommonCwiseUnaryOps.h(80): note: 或       'const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple2_op<unsigned char,std::complex<unsigned char>>,const Derived> Eigen::ArrayBase<Derived>::operator *(const std::complex<unsigned char> &,const Eigen::ArrayBase<Derived> &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::Array<unsigned char,3,1,0,3,1>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/RotationBase.h(80): note: 或       'Eigen::Transform<float,3,2,0> Eigen::RotationBase<Eigen::AngleAxis<float>,3>::operator *(const Eigen::DiagonalMatrix<float,3,3> &,const Derived &)' [使用與引數相關的查閱找到]
          with
          [
              Derived=Eigen::AngleAxis<float>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Geometry/AngleAxis.h(108): note: 或       'Eigen::Quaternion<float,0> Eigen::AngleAxis<float>::operator *(const Eigen::Quaternion<float,0> &,const Eigen::AngleAxis<float> &)' [使用與引數相關的查閱找到]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(137): note: 當嘗試符合引數清單 '(const Eigen::Matrix<float,3,3,0,3,3>, Eigen::Matrix<float,3,1,0,3,1>)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(151): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(155): error C2065: 'axis_reorder': 未宣告的識別項
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): error C2679: 二元運算子 '=': 找不到使用右方運算元類型 'Eigen::Matrix3f' 的運算子 (或是沒有可接受的轉換)
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(111): note: 可能是 'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>::operator =(const Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(322): note: 或       'Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &Eigen::internal::BlockImpl_dense<XprType,3,3,false,true>::operator =(const Eigen::internal::BlockImpl_dense<XprType,3,3,false,true> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MapBase.h(236): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1>::operator =(const Eigen::MapBase<Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>,1> &)'
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/MatrixBase.h(148): note: 或       'Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false> &Eigen::MatrixBase<Derived>::operator =(const Eigen::MatrixBase<Derived> &)'
          with
          [
              Derived=Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>
          ]
  d:\code\pcl-1.8.0-vs2015\pcl 1.8.0\3rdparty\eigen\eigen3\eigen\src/Core/Block.h(156): note: 或       'Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind>::operator =(const Eigen::BlockImpl<XprType,3,3,false,Eigen::internal::traits<Derived>::StorageKind> &)'
          with
          [
              XprType=Eigen::Matrix<float,4,4,0,4,4>,
              Derived=Eigen::Matrix<float,4,4,0,4,4>
          ]
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\kinfuApp/KinfuCommon.h(156): note: 當嘗試符合引數清單 '(Eigen::Block<Eigen::Matrix<float,4,4,0,4,4>,3,3,false>, Eigen::Matrix3f)' 時
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(42): error C2989: 'UIObserver': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(19): note: 請參閱 'UIObserver' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(43): error C2989: 'ISubject': 類別 樣板 已宣告為非類別 樣板
  d:\github\obj_auto_scan\obj_auto_scan\include\grabber\rs/RS.h(11): note: 請參閱 'ISubject' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(44): error C2989: 'SubjectFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/ObserverFactory.h(9): note: 請參閱 'SubjectFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(45): error C2989: 'IGrabber': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(9): note: 請參閱 'IGrabber' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(46): error C2989: 'GrabberFactory': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\grabber/GrabberFactory.h(15): note: 請參閱 'GrabberFactory' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(47): error C2989: 'Arduino': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\arduino/Arduino.h(7): note: 請參閱 'Arduino' 的宣告
D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\ui/MainWindow.h(228): error C2989: 'MainWindow': 類別 樣板 已宣告為非類別 樣板
  D:\github\OBJ_Auto_Scan\OBJ_Auto_SCAN\include\observer/IObserver.h(6): note: 請參閱 'MainWindow' 的宣告
include\ui\MainWindow.cpp(3): error C2988: 無法辨認的樣板宣告/定義
include\ui\MainWindow.cpp(3): error C2143: 語法錯誤: 遺漏 ')' (在 '*' 之前)
include\ui\MainWindow.cpp(3): error C2143: 語法錯誤: 遺漏 ';' (在 '*' 之前)
include\ui\MainWindow.cpp(3): error C2059: 語法錯誤: ')'
include\ui\MainWindow.cpp(3): error C2059: 語法錯誤: ':'
include\ui\MainWindow.cpp(5): error C2448: '_ui': 函式樣式初始設定式似乎是函式定義
include\ui\MainWindow.cpp(18): error C2065: '_keepFrameNumber': 未宣告的識別項
include\ui\MainWindow.cpp(19): error C2065: '_preFrameTime': 未宣告的識別項
include\ui\MainWindow.cpp(20): error C2065: '_grabber': 未宣告的識別項
include\ui\MainWindow.cpp(21): error C2065: '_dialog': 未宣告的識別項
include\ui\MainWindow.cpp(23): error C2065: '_viewer': 未宣告的識別項
include\ui\MainWindow.cpp(24): error C2065: '_uiObserver': 未宣告的識別項
include\ui\MainWindow.cpp(25): error C2065: '_fileFactory': 未宣告的識別項
include\ui\MainWindow.cpp(26): error C2065: '_arduino': 未宣告的識別項
include\ui\MainWindow.cpp(27): error C2065: '_elements': 未宣告的識別項
include\ui\MainWindow.cpp(28): error C2065: '_grabberFactory': 未宣告的識別項
include\ui\MainWindow.cpp(29): error C2065: '_subjectFactory': 未宣告的識別項
include\ui\MainWindow.cpp(30): error C2065: '_keypointFactory': 未宣告的識別項
include\ui\MainWindow.cpp(31): error C2065: '_filterFactory': 未宣告的識別項
include\ui\MainWindow.cpp(32): error C2065: '_correspondencesFactory': 未宣告的識別項
include\ui\MainWindow.cpp(33): error C2065: '_regestrationFactory': 未宣告的識別項
include\ui\MainWindow.cpp(34): error C2065: '_reconstructFactory': 未宣告的識別項
include\ui\MainWindow.cpp(35): error C2065: '_smoothingFactory': 未宣告的識別項
include\ui\MainWindow.cpp(36): error C2065: '_filterProcessing': 未宣告的識別項
include\ui\MainWindow.cpp(36): error C2065: '_filterFactory': 未宣告的識別項
include\ui\MainWindow.cpp(37): error C2065: '_keypointProcessing': 未宣告的識別項
include\ui\MainWindow.cpp(37): error C2065: '_keypointFactory': 未宣告的識別項
include\ui\MainWindow.cpp(38): error C2065: '_correspondencesProcessing': 未宣告的識別項
include\ui\MainWindow.cpp(38): error C2065: '_correspondencesFactory': 未宣告的識別項
include\ui\MainWindow.cpp(39): error C2065: '_regestrationProcessing': 未宣告的識別項
include\ui\MainWindow.cpp(39): error C2065: '_regestrationFactory': 未宣告的識別項
include\ui\MainWindow.cpp(40): error C2065: '_reconstructProcessing': 未宣告的識別項
include\ui\MainWindow.cpp(40): error C2065: '_reconstructFactory': 未宣告的識別項
include\ui\MainWindow.cpp(41): error C2065: '_smoothingProcessing': 未宣告的識別項
include\ui\MainWindow.cpp(41): error C2065: '_smoothingFactory': 未宣告的識別項
include\ui\MainWindow.cpp(43): error C2065: '_isTestedKinfuBoundingBox': 未宣告的識別項
include\ui\MainWindow.cpp(48): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
include\ui\MainWindow.cpp(48): error C3861: 'connect': 找不到識別項
include\ui\MainWindow.cpp(50): error C2819: 類型 'QMainWindow' 沒有多載成員 'operator ->'
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
  include\ui\MainWindow.cpp(50): note: 您是否想要改用 '.'?
include\ui\MainWindow.cpp(50): error C2039: '_openFileAction': 不是 'QMainWindow' 的成員
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
include\ui\MainWindow.cpp(50): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
include\ui\MainWindow.cpp(50): error C3861: 'connect': 找不到識別項
include\ui\MainWindow.cpp(51): error C2819: 類型 'QMainWindow' 沒有多載成員 'operator ->'
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
  include\ui\MainWindow.cpp(51): note: 您是否想要改用 '.'?
include\ui\MainWindow.cpp(51): error C2039: '_saveFileAction': 不是 'QMainWindow' 的成員
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
include\ui\MainWindow.cpp(51): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
include\ui\MainWindow.cpp(51): error C3861: 'connect': 找不到識別項
include\ui\MainWindow.cpp(53): error C2819: 類型 'QMainWindow' 沒有多載成員 'operator ->'
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
  include\ui\MainWindow.cpp(53): note: 您是否想要改用 '.'?
include\ui\MainWindow.cpp(53): error C2039: '_setViewBackgroundToBlackAction': 不是 'QMainWindow' 的成員
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
include\ui\MainWindow.cpp(53): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
include\ui\MainWindow.cpp(53): error C3861: 'connect': 找不到識別項
include\ui\MainWindow.cpp(54): error C2819: 類型 'QMainWindow' 沒有多載成員 'operator ->'
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
  include\ui\MainWindow.cpp(54): note: 您是否想要改用 '.'?
include\ui\MainWindow.cpp(54): error C2039: '_setViewBackgroundToWhiteAction': 不是 'QMainWindow' 的成員
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
include\ui\MainWindow.cpp(54): error C2355: 'this': 只能在非靜態成員函式或非靜態資料成員初始設定式內部參考
include\ui\MainWindow.cpp(54): error C3861: 'connect': 找不到識別項
include\ui\MainWindow.cpp(56): error C2819: 類型 'QMainWindow' 沒有多載成員 'operator ->'
  d:\code\qt5.9.1\5.9.1\msvc2015_64\include\qtwidgets\qtoolbar.h(56): note: 請參閱 'QMainWindow' 的宣告
include\ui\MainWindow.cpp(56): fatal error C1003: 錯誤計數超過 100; 停止編譯
  正在產生程式碼...
